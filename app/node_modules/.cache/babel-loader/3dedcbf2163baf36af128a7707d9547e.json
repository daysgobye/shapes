{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/editShape.js\";\nimport React, { Component } from \"react\";\nimport shape from \"../classes/shape\";\n\nclass EditShape extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateScale = () => {\n      this.props.updateShape(this.props.shape.upDateMinSize(this.scaleRef.current.value));\n    };\n\n    this.onUpdateAmount = () => {\n      this.props.updateShape(this.props.shape.upDateNum(this.amountToSpawnRef.current.value));\n    };\n\n    this.state = {};\n    this.amountToSpawnRef = React.createRef();\n    this.scaleRef = React.createRef();\n  }\n\n  render() {\n    const shape = this.props.shape;\n    return React.createElement(\"div\", {\n      key: this.props.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, shape.color, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"number to spawn\", React.createElement(\"input\", {\n      onChange: this.onUpdateAmount,\n      ref: this.amountToSpawnRef,\n      type: \"text\",\n      value: shape.numToRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"scale\", React.createElement(\"input\", {\n      ref: this.scaleRef,\n      onChange: this.onUpdateScale,\n      type: \"text\",\n      value: shape.minSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: shape.image,\n      width: 100,\n      height: 100,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EditShape;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/editShape.js"],"names":["React","Component","shape","EditShape","constructor","props","onUpdateScale","updateShape","upDateMinSize","scaleRef","current","value","onUpdateAmount","upDateNum","amountToSpawnRef","state","createRef","render","key","color","numToRender","minSize","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AACA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,aANmB,GAMH,MAAM;AACpB,WAAKD,KAAL,CAAWE,WAAX,CACE,KAAKF,KAAL,CAAWH,KAAX,CAAiBM,aAAjB,CAA+B,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAArD,CADF;AAGD,KAVkB;;AAAA,SAWnBC,cAXmB,GAWF,MAAM;AACrB,WAAKP,KAAL,CAAWE,WAAX,CACE,KAAKF,KAAL,CAAWH,KAAX,CAAiBW,SAAjB,CAA2B,KAAKC,gBAAL,CAAsBJ,OAAtB,CAA8BC,KAAzD,CADF;AAGD,KAfkB;;AAEjB,SAAKI,KAAL,GAAa,EAAb;AACA,SAAKD,gBAAL,GAAwBd,KAAK,CAACgB,SAAN,EAAxB;AACA,SAAKP,QAAL,GAAgBT,KAAK,CAACgB,SAAN,EAAhB;AACD;;AAWDC,EAAAA,MAAM,GAAG;AAAA,UACCf,KADD,GACW,KAAKG,KADhB,CACCH,KADD;AAEP,WACE;AAAK,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWa,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,KAAK,CAACiB,KADT,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,MAAA,QAAQ,EAAE,KAAKP,cADjB;AAEE,MAAA,GAAG,EAAE,KAAKE,gBAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEZ,KAAK,CAACkB,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,MAAA,GAAG,EAAE,KAAKX,QADZ;AAEE,MAAA,QAAQ,EAAE,KAAKH,aAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEJ,KAAK,CAACmB,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAZF,EAqBE;AAAK,MAAA,GAAG,EAAEnB,KAAK,CAACoB,KAAhB;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE,GAA3C;AAAgD,MAAA,GAAG,EAAC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD;;AA5C+B;;AA+ClC,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport shape from \"../classes/shape\";\nclass EditShape extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.amountToSpawnRef = React.createRef();\n    this.scaleRef = React.createRef();\n  }\n  onUpdateScale = () => {\n    this.props.updateShape(\n      this.props.shape.upDateMinSize(this.scaleRef.current.value)\n    );\n  };\n  onUpdateAmount = () => {\n    this.props.updateShape(\n      this.props.shape.upDateNum(this.amountToSpawnRef.current.value)\n    );\n  };\n  render() {\n    const { shape } = this.props;\n    return (\n      <div key={this.props.key}>\n        {shape.color}\n        {/* {shape.image} */}\n        <label>\n          number to spawn\n          <input\n            onChange={this.onUpdateAmount}\n            ref={this.amountToSpawnRef}\n            type=\"text\"\n            value={shape.numToRender}\n          />\n        </label>\n        <label>\n          scale\n          <input\n            ref={this.scaleRef}\n            onChange={this.onUpdateScale}\n            type=\"text\"\n            value={shape.minSize}\n          />\n        </label>\n        <img src={shape.image} width={100} height={100} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default EditShape;\n"]},"metadata":{},"sourceType":"module"}