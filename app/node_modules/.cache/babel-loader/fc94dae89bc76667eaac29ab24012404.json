{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement } from \"../helpers.js/placement\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.posAllShapes = () => {\n      this.setState({\n        shapes: placement(this.props.shapes, window.innerWidth, window.innerHeight)\n      }, () => {\n        this.saveFile();\n        this.saveImage();\n      });\n    };\n\n    this.textFile = null;\n\n    this.makeTextFile = text => {\n      var data = new Blob([text], {\n        type: \"text/plain\"\n      }); // If we are replacing a previously generated file we need to\n      // manually revoke the object URL to avoid memory leaks.\n\n      if (this.textFile !== null) {\n        window.URL.revokeObjectURL(this.textFile);\n      }\n\n      this.textFile = window.URL.createObjectURL(data); // returns a URL you can use as a href\n\n      return this.textFile;\n    };\n\n    this.saveFile = () => {\n      var create = document.getElementById(\"create\");\n      create.addEventListener(\"click\", function () {\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"download\", \"shapes.txt\");\n        link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n        document.body.appendChild(link); // wait for the link to be added to the document\n\n        window.requestAnimationFrame(function () {\n          var event = new MouseEvent(\"click\");\n          link.dispatchEvent(event);\n          document.body.removeChild(link);\n        });\n      }, false);\n    };\n\n    this.downloadURI = (uri, name) => {\n      var link = document.createElement(\"a\");\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n\n    this.saveImage = () => {\n      this.stageRef.current.getStage().toDataURL({\n        pixelRatio: 3\n      });\n      downloadURI(dataURL, \"stage.png\");\n    };\n\n    this.state = {\n      shapes: []\n    };\n    this.stageRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Stage, {\n      ref: this.stageRef,\n      width: window.innerWidth - 200,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.shapes.map(shape => {\n      return React.createElement(SvgRender, {\n        src: shape.image,\n        x: shape.pos.x,\n        y: shape.pos.y,\n        scale: shape.minSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }))), React.createElement(\"button\", {\n      onClick: this.posAllShapes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"mix\"), React.createElement(\"div\", {\n      id: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","SvgRender","placement","Canvas","constructor","props","posAllShapes","setState","shapes","window","innerWidth","innerHeight","saveFile","saveImage","textFile","makeTextFile","text","data","Blob","type","URL","revokeObjectURL","createObjectURL","create","document","getElementById","addEventListener","link","createElement","setAttribute","href","JSON","stringify","state","body","appendChild","requestAnimationFrame","event","MouseEvent","dispatchEvent","removeChild","downloadURI","uri","name","download","click","stageRef","current","getStage","toDataURL","pixelRatio","dataURL","createRef","render","map","shape","image","pos","x","y","minSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement } from \"../helpers.js/placement\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { shapes: [] };\n    this.stageRef = React.createRef();\n  }\n  posAllShapes = () => {\n    this.setState(\n      {\n        shapes: placement(\n          this.props.shapes,\n          window.innerWidth,\n          window.innerHeight\n        )\n      },\n      () => {\n        this.saveFile();\n        this.saveImage();\n      }\n    );\n  };\n\n  textFile = null;\n\n  makeTextFile = text => {\n    var data = new Blob([text], { type: \"text/plain\" });\n\n    // If we are replacing a previously generated file we need to\n    // manually revoke the object URL to avoid memory leaks.\n    if (this.textFile !== null) {\n      window.URL.revokeObjectURL(this.textFile);\n    }\n\n    this.textFile = window.URL.createObjectURL(data);\n\n    // returns a URL you can use as a href\n    return this.textFile;\n  };\n\n  saveFile = () => {\n    var create = document.getElementById(\"create\");\n    create.addEventListener(\n      \"click\",\n      function() {\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"download\", \"shapes.txt\");\n        link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n        document.body.appendChild(link);\n\n        // wait for the link to be added to the document\n        window.requestAnimationFrame(function() {\n          var event = new MouseEvent(\"click\");\n          link.dispatchEvent(event);\n          document.body.removeChild(link);\n        });\n      },\n      false\n    );\n  };\n  downloadURI = (uri, name) => {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  saveImage = () => {\n    this.stageRef.current.getStage().toDataURL({ pixelRatio: 3 });\n    downloadURI(dataURL, \"stage.png\");\n  };\n\n  render() {\n    return (\n      <>\n        <Stage\n          ref={this.stageRef}\n          width={window.innerWidth - 200}\n          height={window.innerHeight}\n        >\n          <Layer>\n            {this.state.shapes.map(shape => {\n              return (\n                <SvgRender\n                  src={shape.image}\n                  x={shape.pos.x}\n                  y={shape.pos.y}\n                  scale={shape.minSize}\n                />\n              );\n            })}\n            {/* <SvgRender src={icon} x={300} y={800} scale={8} /> */}\n          </Layer>\n        </Stage>\n        <button onClick={this.posAllShapes}>mix</button>\n        <div id=\"create\"></div>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}