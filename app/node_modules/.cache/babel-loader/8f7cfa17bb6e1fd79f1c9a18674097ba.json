{"ast":null,"code":"import _objectSpread from \"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const placement = (shapes, width, height) => {\n  return shapes.map(shape => {\n    return _objectSpread({}, shape, {\n      pos: {\n        x: randomInRange(1, width),\n        y: randomInRange(1, height)\n      }\n    });\n  });\n};\nexport const placeOneShape = (shape, width, height) => {\n  return _objectSpread({}, shape, {\n    pos: {\n      x: randomInRange(1, width),\n      y: randomInRange(1, height)\n    }\n  });\n};\nexport const randomInRange = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/helpers.js/placement.js"],"names":["placement","shapes","width","height","map","shape","pos","x","randomInRange","y","placeOneShape","min","max","Math","floor","random"],"mappings":";AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,KAA2B;AAClD,SAAOF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACzB,6BACKA,KADL;AAEEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,CAAC,EAAEC,aAAa,CAAC,CAAD,EAAIN,KAAJ,CAAlB;AAA8BO,QAAAA,CAAC,EAAED,aAAa,CAAC,CAAD,EAAIL,MAAJ;AAA9C;AAFP;AAID,GALM,CAAP;AAMD,CAPM;AAQP,OAAO,MAAMO,aAAa,GAAG,CAACL,KAAD,EAAQH,KAAR,EAAeC,MAAf,KAA0B;AACrD,2BACKE,KADL;AAEEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,CAAC,EAAEC,aAAa,CAAC,CAAD,EAAIN,KAAJ,CAAlB;AAA8BO,MAAAA,CAAC,EAAED,aAAa,CAAC,CAAD,EAAIL,MAAJ;AAA9C;AAFP;AAID,CALM;AAOP,OAAO,MAAMK,aAAa,GAAG,CAACG,GAAD,EAAMC,GAAN,KAC3BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CADK","sourcesContent":["export const placement = (shapes, width, height) => {\n  return shapes.map(shape => {\n    return {\n      ...shape,\n      pos: { x: randomInRange(1, width), y: randomInRange(1, height) }\n    };\n  });\n};\nexport const placeOneShape = (shape, width, height) => {\n  return {\n    ...shape,\n    pos: { x: randomInRange(1, width), y: randomInRange(1, height) }\n  };\n};\n\nexport const randomInRange = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n"]},"metadata":{},"sourceType":"module"}