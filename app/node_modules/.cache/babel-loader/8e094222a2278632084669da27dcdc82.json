{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement, placeInZone } from \"../helpers.js/placement\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.posAllShapes = () => {\n      this.setState({\n        shapes: placement(this.props.shapes, window.innerWidth, window.innerHeight)\n      }, () => {\n        this.saveFile();\n        this.saveImage();\n      });\n    };\n\n    this.textFile = null;\n\n    this.makeTextFile = text => {\n      var data = new Blob([text], {\n        type: \"text/plain\"\n      }); // If we are replacing a previously generated file we need to\n      // manually revoke the object URL to avoid memory leaks.\n\n      if (this.textFile !== null) {\n        window.URL.revokeObjectURL(this.textFile);\n      }\n\n      this.textFile = window.URL.createObjectURL(data); // returns a URL you can use as a href\n\n      return this.textFile;\n    };\n\n    this.saveFile = () => {\n      var create = document.getElementById(\"create\");\n      create.addEventListener(\"click\", function () {\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"download\", \"shapes.txt\");\n        link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n        document.body.appendChild(link); // wait for the link to be added to the document\n\n        window.requestAnimationFrame(function () {\n          var event = new MouseEvent(\"click\");\n          link.dispatchEvent(event);\n          document.body.removeChild(link);\n        });\n      }, false);\n    };\n\n    this.downloadURI = (uri, name) => {\n      var link = document.createElement(\"a\");\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n\n    this.saveImage = () => {\n      const dataURL = this.stageRef.current.getStage().toDataURL({\n        pixelRatio: 3\n      });\n      this.downloadURI(dataURL, \"stage.png\");\n    };\n\n    this.renderArrayOfShapes = shape => {\n      let array = [];\n\n      for (let i = 0; i < shape.numToRender; i++) {\n        array.push(React.createElement(SvgRender, {\n          src: shape.image,\n          x: placeInZone(window.innerWidth - this.state.sideBar),\n          y: placeInZone(window.innerHeight),\n          scale: shape.minSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      }\n\n      return array;\n    };\n\n    this.shapeRender = () => {\n      const render = this.state.shapes.map(shape => {\n        return this.renderArrayOfShapes(shape);\n      });\n      console.log(\"I can save this\", render);\n      return render;\n    };\n\n    this.state = {\n      shapes: [],\n      sideBar: 600\n    };\n    this.stageRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Stage, {\n      ref: this.stageRef,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Rect, {\n      x: 0,\n      y: 0,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      fill: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.shapeRender())), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.posAllShapes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"mix\"), React.createElement(\"button\", {\n      onClick: this.saveImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Save Image\")), React.createElement(\"div\", {\n      id: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","Rect","SvgRender","placement","placeInZone","Canvas","constructor","props","posAllShapes","setState","shapes","window","innerWidth","innerHeight","saveFile","saveImage","textFile","makeTextFile","text","data","Blob","type","URL","revokeObjectURL","createObjectURL","create","document","getElementById","addEventListener","link","createElement","setAttribute","href","JSON","stringify","state","body","appendChild","requestAnimationFrame","event","MouseEvent","dispatchEvent","removeChild","downloadURI","uri","name","download","click","dataURL","stageRef","current","getStage","toDataURL","pixelRatio","renderArrayOfShapes","shape","array","i","numToRender","push","image","sideBar","minSize","shapeRender","render","map","console","log","createRef","display","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,IAA9B,QAA0C,aAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,yBAAvC;;AACA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAC7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJ,MAAM;AACnB,WAAKC,QAAL,CACE;AACEC,QAAAA,MAAM,EAAEP,SAAS,CACf,KAAKI,KAAL,CAAWG,MADI,EAEfC,MAAM,CAACC,UAFQ,EAGfD,MAAM,CAACE,WAHQ;AADnB,OADF,EAQE,MAAM;AACJ,aAAKC,QAAL;AACA,aAAKC,SAAL;AACD,OAXH;AAaD,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBR,IArBQ;;AAAA,SAuBnBC,YAvBmB,GAuBJC,IAAI,IAAI;AACrB,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiB;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAjB,CAAX,CADqB,CAGrB;AACA;;AACA,UAAI,KAAKL,QAAL,KAAkB,IAAtB,EAA4B;AAC1BL,QAAAA,MAAM,CAACW,GAAP,CAAWC,eAAX,CAA2B,KAAKP,QAAhC;AACD;;AAED,WAAKA,QAAL,GAAgBL,MAAM,CAACW,GAAP,CAAWE,eAAX,CAA2BL,IAA3B,CAAhB,CATqB,CAWrB;;AACA,aAAO,KAAKH,QAAZ;AACD,KApCkB;;AAAA,SAsCnBF,QAtCmB,GAsCR,MAAM;AACf,UAAIW,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACAF,MAAAA,MAAM,CAACG,gBAAP,CACE,OADF,EAEE,YAAW;AACT,YAAIC,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAX;AACAD,QAAAA,IAAI,CAACE,YAAL,CAAkB,UAAlB,EAA8B,YAA9B;AACAF,QAAAA,IAAI,CAACG,IAAL,GAAY,KAAKf,YAAL,CAAkBgB,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWzB,MAA1B,CAAlB,CAAZ;AACAgB,QAAAA,QAAQ,CAACU,IAAT,CAAcC,WAAd,CAA0BR,IAA1B,EAJS,CAMT;;AACAlB,QAAAA,MAAM,CAAC2B,qBAAP,CAA6B,YAAW;AACtC,cAAIC,KAAK,GAAG,IAAIC,UAAJ,CAAe,OAAf,CAAZ;AACAX,UAAAA,IAAI,CAACY,aAAL,CAAmBF,KAAnB;AACAb,UAAAA,QAAQ,CAACU,IAAT,CAAcM,WAAd,CAA0Bb,IAA1B;AACD,SAJD;AAKD,OAdH,EAeE,KAfF;AAiBD,KAzDkB;;AAAA,SA0DnBc,WA1DmB,GA0DL,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC3B,UAAIhB,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAX;AACAD,MAAAA,IAAI,CAACiB,QAAL,GAAgBD,IAAhB;AACAhB,MAAAA,IAAI,CAACG,IAAL,GAAYY,GAAZ;AACAlB,MAAAA,QAAQ,CAACU,IAAT,CAAcC,WAAd,CAA0BR,IAA1B;AACAA,MAAAA,IAAI,CAACkB,KAAL;AACArB,MAAAA,QAAQ,CAACU,IAAT,CAAcM,WAAd,CAA0Bb,IAA1B;AACD,KAjEkB;;AAAA,SAkEnBd,SAlEmB,GAkEP,MAAM;AAChB,YAAMiC,OAAO,GAAG,KAAKC,QAAL,CAAcC,OAAd,CACbC,QADa,GAEbC,SAFa,CAEH;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAFG,CAAhB;AAGA,WAAKV,WAAL,CAAiBK,OAAjB,EAA0B,WAA1B;AACD,KAvEkB;;AAAA,SAyEnBM,mBAzEmB,GAyEGC,KAAK,IAAI;AAC7B,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,WAA1B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CD,QAAAA,KAAK,CAACG,IAAN,CACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEJ,KAAK,CAACK,KADb;AAEE,UAAA,CAAC,EAAExD,WAAW,CAACO,MAAM,CAACC,UAAP,GAAoB,KAAKuB,KAAL,CAAW0B,OAAhC,CAFhB;AAGE,UAAA,CAAC,EAAEzD,WAAW,CAACO,MAAM,CAACE,WAAR,CAHhB;AAIE,UAAA,KAAK,EAAE0C,KAAK,CAACO,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,aAAON,KAAP;AACD,KAtFkB;;AAAA,SAwFnBO,WAxFmB,GAwFL,MAAM;AAClB,YAAMC,MAAM,GAAG,KAAK7B,KAAL,CAAWzB,MAAX,CAAkBuD,GAAlB,CAAsBV,KAAK,IAAI;AAC5C,eAAO,KAAKD,mBAAL,CAAyBC,KAAzB,CAAP;AACD,OAFc,CAAf;AAGAW,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,MAA/B;AAEA,aAAOA,MAAP;AACD,KA/FkB;;AAEjB,SAAK7B,KAAL,GAAa;AAAEzB,MAAAA,MAAM,EAAE,EAAV;AAAcmD,MAAAA,OAAO,EAAE;AAAvB,KAAb;AACA,SAAKZ,QAAL,GAAgBvD,KAAK,CAAC0E,SAAN,EAAhB;AACD;;AA6FDJ,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAE,KAAKf,QADZ;AAEE,MAAA,KAAK,EAAEtC,MAAM,CAACC,UAAP,GAAoB,KAAKuB,KAAL,CAAW0B,OAFxC;AAGE,MAAA,MAAM,EAAElD,MAAM,CAACE,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,CAAC,EAAE,CADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,KAAK,EAAEF,MAAM,CAACC,UAAP,GAAoB,KAAKuB,KAAL,CAAW0B,OAHxC;AAIE,MAAA,MAAM,EAAElD,MAAM,CAACE,WAJjB;AAKE,MAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAcE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKkD,WAAL,EADH,CAdF,CADF,EAoBE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAK9D,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKO,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CApBF,EAyBE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CADF;AA6BD;;AAhI4B;;AAmI/B,eAAeV,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement, placeInZone } from \"../helpers.js/placement\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { shapes: [], sideBar: 600 };\n    this.stageRef = React.createRef();\n  }\n  posAllShapes = () => {\n    this.setState(\n      {\n        shapes: placement(\n          this.props.shapes,\n          window.innerWidth,\n          window.innerHeight\n        )\n      },\n      () => {\n        this.saveFile();\n        this.saveImage();\n      }\n    );\n  };\n\n  textFile = null;\n\n  makeTextFile = text => {\n    var data = new Blob([text], { type: \"text/plain\" });\n\n    // If we are replacing a previously generated file we need to\n    // manually revoke the object URL to avoid memory leaks.\n    if (this.textFile !== null) {\n      window.URL.revokeObjectURL(this.textFile);\n    }\n\n    this.textFile = window.URL.createObjectURL(data);\n\n    // returns a URL you can use as a href\n    return this.textFile;\n  };\n\n  saveFile = () => {\n    var create = document.getElementById(\"create\");\n    create.addEventListener(\n      \"click\",\n      function() {\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"download\", \"shapes.txt\");\n        link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n        document.body.appendChild(link);\n\n        // wait for the link to be added to the document\n        window.requestAnimationFrame(function() {\n          var event = new MouseEvent(\"click\");\n          link.dispatchEvent(event);\n          document.body.removeChild(link);\n        });\n      },\n      false\n    );\n  };\n  downloadURI = (uri, name) => {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  saveImage = () => {\n    const dataURL = this.stageRef.current\n      .getStage()\n      .toDataURL({ pixelRatio: 3 });\n    this.downloadURI(dataURL, \"stage.png\");\n  };\n\n  renderArrayOfShapes = shape => {\n    let array = [];\n    for (let i = 0; i < shape.numToRender; i++) {\n      array.push(\n        <SvgRender\n          src={shape.image}\n          x={placeInZone(window.innerWidth - this.state.sideBar)}\n          y={placeInZone(window.innerHeight)}\n          scale={shape.minSize}\n        />\n      );\n    }\n    return array;\n  };\n\n  shapeRender = () => {\n    const render = this.state.shapes.map(shape => {\n      return this.renderArrayOfShapes(shape);\n    });\n    console.log(\"I can save this\", render);\n\n    return render;\n  };\n\n  render() {\n    return (\n      <>\n        <Stage\n          ref={this.stageRef}\n          width={window.innerWidth - this.state.sideBar}\n          height={window.innerHeight}\n        >\n          <Layer>\n            <Rect\n              x={0}\n              y={0}\n              width={window.innerWidth - this.state.sideBar}\n              height={window.innerHeight}\n              fill=\"white\"\n            />\n          </Layer>\n          <Layer>\n            {this.shapeRender()}\n            {/* <SvgRender src={icon} x={300} y={800} scale={8} /> */}\n          </Layer>\n        </Stage>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <button onClick={this.posAllShapes}>mix</button>\n          <button onClick={this.saveImage}>Save Image</button>\n        </div>\n\n        <div id=\"create\"></div>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}