{"ast":null,"code":"import _classCallCheck from\"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import shape from\"../classes/shape\";var EditShape=/*#__PURE__*/function(_Component){_inherits(EditShape,_Component);function EditShape(props){var _this;_classCallCheck(this,EditShape);_this=_possibleConstructorReturn(this,_getPrototypeOf(EditShape).call(this,props));_this.onUpdateScale=function(){_this.props.updateShape(_this.props.shape.upDateMinSize(_this.scaleRef.current.value));};_this.onUpdateAmount=function(){_this.props.updateShape(_this.props.shape.upDateNum(_this.amountToSpawnRef.current.value));};_this.state={};_this.amountToSpawnRef=React.createRef();_this.scaleRef=React.createRef();return _this;}_createClass(EditShape,[{key:\"render\",value:function render(){var shape=this.props.shape;return React.createElement(\"div\",{key:this.props.key},React.createElement(\"label\",null,\"number to spawn:\",React.createElement(\"input\",{onChange:this.onUpdateAmount,ref:this.amountToSpawnRef,type:\"text\",value:shape.numToRender})),React.createElement(\"img\",{src:shape.image,width:100,height:100,alt:\"\"}));}}]);return EditShape;}(Component);export default EditShape;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/editShape.js"],"names":["React","Component","shape","EditShape","props","onUpdateScale","updateShape","upDateMinSize","scaleRef","current","value","onUpdateAmount","upDateNum","amountToSpawnRef","state","createRef","key","numToRender","image"],"mappings":"8oBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,C,GACMC,CAAAA,S,mEACJ,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GADiB,MAMnBC,aANmB,CAMH,UAAM,CACpB,MAAKD,KAAL,CAAWE,WAAX,CACE,MAAKF,KAAL,CAAWF,KAAX,CAAiBK,aAAjB,CAA+B,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAArD,CADF,EAGD,CAVkB,OAWnBC,cAXmB,CAWF,UAAM,CACrB,MAAKP,KAAL,CAAWE,WAAX,CACE,MAAKF,KAAL,CAAWF,KAAX,CAAiBU,SAAjB,CAA2B,MAAKC,gBAAL,CAAsBJ,OAAtB,CAA8BC,KAAzD,CADF,EAGD,CAfkB,CAEjB,MAAKI,KAAL,CAAa,EAAb,CACA,MAAKD,gBAAL,CAAwBb,KAAK,CAACe,SAAN,EAAxB,CACA,MAAKP,QAAL,CAAgBR,KAAK,CAACe,SAAN,EAAhB,CAJiB,aAKlB,C,6DAWQ,IACCb,CAAAA,KADD,CACW,KAAKE,KADhB,CACCF,KADD,CAEP,MACE,4BAAK,GAAG,CAAE,KAAKE,KAAL,CAAWY,GAArB,EAGE,oDAEE,6BACE,QAAQ,CAAE,KAAKL,cADjB,CAEE,GAAG,CAAE,KAAKE,gBAFZ,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAEX,KAAK,CAACe,WAJf,EAFF,CAHF,CAqBE,2BAAK,GAAG,CAAEf,KAAK,CAACgB,KAAhB,CAAuB,KAAK,CAAE,GAA9B,CAAmC,MAAM,CAAE,GAA3C,CAAgD,GAAG,CAAC,EAApD,EArBF,CADF,CAyBD,C,uBA5CqBjB,S,EA+CxB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport shape from \"../classes/shape\";\nclass EditShape extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.amountToSpawnRef = React.createRef();\n    this.scaleRef = React.createRef();\n  }\n  onUpdateScale = () => {\n    this.props.updateShape(\n      this.props.shape.upDateMinSize(this.scaleRef.current.value)\n    );\n  };\n  onUpdateAmount = () => {\n    this.props.updateShape(\n      this.props.shape.upDateNum(this.amountToSpawnRef.current.value)\n    );\n  };\n  render() {\n    const { shape } = this.props;\n    return (\n      <div key={this.props.key}>\n        {/* {shape.color} */}\n        {/* {shape.image} */}\n        <label>\n          number to spawn:\n          <input\n            onChange={this.onUpdateAmount}\n            ref={this.amountToSpawnRef}\n            type=\"text\"\n            value={shape.numToRender}\n          />\n        </label>\n        {/* <label>\n          scale:\n          <input\n            ref={this.scaleRef}\n            onChange={this.onUpdateScale}\n            type=\"text\"\n            value={shape.minSize}\n          />\n        </label> */}\n        <img src={shape.image} width={100} height={100} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default EditShape;\n"]},"metadata":{},"sourceType":"module"}