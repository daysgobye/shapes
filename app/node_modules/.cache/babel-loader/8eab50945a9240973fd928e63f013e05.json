{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } //   // try to draw SVG natively\n  //   Konva.Image.fromURL(SOURCE, imageNode => {\n  //     layer.add(imageNode);\n  //     imageNode.setAttrs({\n  //       width: 150,\n  //       height: 150\n  //     });\n  //     layer.batchDraw();\n  //   });\n  //   // draw svg with external library\n  //   var canvas = document.createElement('canvas');\n  //   canvg(canvas, SOURCE, {\n  //     renderCallback: function() {\n  //       var image = new Konva.Image({\n  //         image: canvas,\n  //         x: 200,\n  //         width: 150,\n  //         height: 150\n  //       });\n  //       layer.add(image);\n  //       layer.batchDraw();\n  //     }\n  //   });\n  //   v = null;\n  //   componentDidMount() {\n  //     this.load();\n  //   }\n  //   load = async () => {\n  //     var stage = new Konva.Stage({\n  //       container: \"container\",\n  //       width: width,\n  //       height: height\n  //     });\n  //     var layer = new Konva.Layer();\n  //     stage.add(layer);\n  //     const canvas = document.querySelector(\"canvas\");\n  //     const ctx = canvas.getContext(\"2d\");\n  // this.v = await Canvg.from(ctx, icon);\n  // console.log(this.v, ctx);\n  // // Start SVG rendering with animations and mouse handling.\n  // ctx.fillStyle = \"black\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Canvg(document.getElementById(\"canvas\"), icon, {\n  //   ignoreClear: true,\n  //   ignoreMouse: true\n  // });\n  // Canvg(document.getElementById(\"canvas\"), logo, {\n  //   ignoreClear: true,\n  //   ignoreMouse: true\n  // });\n  // this.v.start();\n  // ctx.fillStyle = \"black\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Konva.Image.fromURL(icon, imageNode => {\n  //   layer.add(imageNode);\n  //   imageNode.setAttrs({\n  //     width: 150,\n  //     height: 150\n  //   });\n  //   layer.batchDraw();\n  // });\n  // draw svg with external library\n  //     Canvg(canvas, icon, {\n  //       renderCallback: function() {\n  //         var image = new Konva.Image({\n  //           image: canvas,\n  //           x: 200,\n  //           width: 150,\n  //           height: 150\n  //         });\n  //         layer.add(image);\n  //         layer.batchDraw();\n  //       }\n  //     });\n  //   };\n  //   componentWillUnmount() {\n  //     this.v.stop();\n  //   }\n\n\n  render() {\n    return React.createElement(Stage, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(SvgRender, {\n      src: icon,\n      x: 20,\n      y: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","SvgRender","Canvas","constructor","props","state","render","window","innerWidth","innerHeight","icon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD,GAJ4B,CAM7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,MAAM,CAACC,UAArB;AAAiC,MAAA,MAAM,EAAED,MAAM,CAACE,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEC,IAAhB;AAAsB,MAAA,CAAC,EAAE,EAAzB;AAA6B,MAAA,CAAC,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAnG4B;;AAsG/B,eAAeR,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  //   // try to draw SVG natively\n  //   Konva.Image.fromURL(SOURCE, imageNode => {\n  //     layer.add(imageNode);\n  //     imageNode.setAttrs({\n  //       width: 150,\n  //       height: 150\n  //     });\n  //     layer.batchDraw();\n  //   });\n\n  //   // draw svg with external library\n  //   var canvas = document.createElement('canvas');\n  //   canvg(canvas, SOURCE, {\n  //     renderCallback: function() {\n  //       var image = new Konva.Image({\n  //         image: canvas,\n  //         x: 200,\n  //         width: 150,\n  //         height: 150\n  //       });\n  //       layer.add(image);\n  //       layer.batchDraw();\n  //     }\n  //   });\n\n  //   v = null;\n  //   componentDidMount() {\n  //     this.load();\n  //   }\n  //   load = async () => {\n  //     var stage = new Konva.Stage({\n  //       container: \"container\",\n  //       width: width,\n  //       height: height\n  //     });\n\n  //     var layer = new Konva.Layer();\n  //     stage.add(layer);\n  //     const canvas = document.querySelector(\"canvas\");\n  //     const ctx = canvas.getContext(\"2d\");\n\n  // this.v = await Canvg.from(ctx, icon);\n  // console.log(this.v, ctx);\n\n  // // Start SVG rendering with animations and mouse handling.\n  // ctx.fillStyle = \"black\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Canvg(document.getElementById(\"canvas\"), icon, {\n  //   ignoreClear: true,\n  //   ignoreMouse: true\n  // });\n  // Canvg(document.getElementById(\"canvas\"), logo, {\n  //   ignoreClear: true,\n  //   ignoreMouse: true\n  // });\n  // this.v.start();\n  // ctx.fillStyle = \"black\";\n  // ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Konva.Image.fromURL(icon, imageNode => {\n  //   layer.add(imageNode);\n  //   imageNode.setAttrs({\n  //     width: 150,\n  //     height: 150\n  //   });\n  //   layer.batchDraw();\n  // });\n\n  // draw svg with external library\n  //     Canvg(canvas, icon, {\n  //       renderCallback: function() {\n  //         var image = new Konva.Image({\n  //           image: canvas,\n  //           x: 200,\n  //           width: 150,\n  //           height: 150\n  //         });\n  //         layer.add(image);\n  //         layer.batchDraw();\n  //       }\n  //     });\n  //   };\n\n  //   componentWillUnmount() {\n  //     this.v.stop();\n  //   }\n  render() {\n    return (\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <SvgRender src={icon} x={20} y={8} />\n        </Layer>\n      </Stage>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}