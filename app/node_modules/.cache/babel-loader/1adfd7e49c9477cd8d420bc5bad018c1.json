{"ast":null,"code":"import _objectSpread from \"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement, placeInZone } from \"../helpers.js/placement\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.posAllShapes = () => {\n      this.setState({\n        shapes: placement(this.props.shapes, window.innerWidth, window.innerHeight)\n      }, () => {// this.saveFile();\n        // this.saveImage();\n      });\n    };\n\n    this.savedRender = [];\n    this.textFile = null;\n\n    this.makeTextFile = text => {\n      var data = new Blob([text], {\n        type: \"text/plain\"\n      }); // If we are replacing a previously generated file we need to\n      // manually revoke the object URL to avoid memory leaks.\n\n      if (this.textFile !== null) {\n        window.URL.revokeObjectURL(this.textFile);\n      }\n\n      this.textFile = window.URL.createObjectURL(data); // returns a URL you can use as a href\n\n      return this.textFile;\n    };\n\n    this.saveFile = () => {\n      // var create = document.getElementById(\"create\");\n      // create.addEventListener(\n      //   \"click\",\n      //   function() {\n      //     var link = document.createElement(\"a\");\n      //     link.setAttribute(\"download\", \"shapes.txt\");\n      //     link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n      //     document.body.appendChild(link);\n      //     // wait for the link to be added to the document\n      //     window.requestAnimationFrame(function() {\n      //       var event = new MouseEvent(\"click\");\n      //       link.dispatchEvent(event);\n      //       document.body.removeChild(link);\n      //     });\n      //   },\n      //   false\n      // );\n      this.downloadURI(this.makeTextFile(JSON.stringify(this.savedRender)), \"shapes.json\");\n    };\n\n    this.downloadURI = (uri, name) => {\n      var link = document.createElement(\"a\");\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n\n    this.saveImage = () => {\n      const dataURL = this.stageRef.current.getStage().toDataURL({\n        pixelRatio: 3\n      });\n      this.downloadURI(dataURL, \"stage.png\");\n    };\n\n    this.renderArrayOfShapes = shape => {\n      let array = [];\n      let loopShape = [];\n\n      for (let i = 0; i < shape.numToRender; i++) {\n        let x = placeInZone(window.innerWidth - this.state.sideBar);\n        let y = placeInZone(window.innerHeight);\n        array.push(React.createElement(SvgRender, {\n          src: shape.image,\n          x: x,\n          y: x,\n          scale: shape.minSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n        loopShape.push(_objectSpread({}, shape, {\n          pos: {\n            x,\n            y\n          }\n        }));\n      }\n\n      this.savedRender.push(loopShape);\n      return array;\n    };\n\n    this.shapeRender = () => {\n      const render = this.state.shapes.map(shape => {\n        return this.renderArrayOfShapes(shape);\n      }); // this.savedRender = render;\n\n      return render;\n    };\n\n    this.state = {\n      shapes: [],\n      sideBar: 600\n    };\n    this.stageRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Stage, {\n      ref: this.stageRef,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Rect, {\n      x: 0,\n      y: 0,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      fill: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.shapeRender())), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.posAllShapes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"mix\"), React.createElement(\"button\", {\n      onClick: this.saveImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Save Image\"), React.createElement(\"button\", {\n      onClick: this.saveFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Save set\")), React.createElement(\"div\", {\n      id: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","Rect","SvgRender","placement","placeInZone","Canvas","constructor","props","posAllShapes","setState","shapes","window","innerWidth","innerHeight","savedRender","textFile","makeTextFile","text","data","Blob","type","URL","revokeObjectURL","createObjectURL","saveFile","downloadURI","JSON","stringify","uri","name","link","document","createElement","download","href","body","appendChild","click","removeChild","saveImage","dataURL","stageRef","current","getStage","toDataURL","pixelRatio","renderArrayOfShapes","shape","array","loopShape","i","numToRender","x","state","sideBar","y","push","image","minSize","pos","shapeRender","render","map","createRef","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement, placeInZone } from \"../helpers.js/placement\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { shapes: [], sideBar: 600 };\n    this.stageRef = React.createRef();\n  }\n  posAllShapes = () => {\n    this.setState(\n      {\n        shapes: placement(\n          this.props.shapes,\n          window.innerWidth,\n          window.innerHeight\n        )\n      },\n      () => {\n        // this.saveFile();\n        // this.saveImage();\n      }\n    );\n  };\n  savedRender = [];\n  textFile = null;\n\n  makeTextFile = text => {\n    var data = new Blob([text], { type: \"text/plain\" });\n\n    // If we are replacing a previously generated file we need to\n    // manually revoke the object URL to avoid memory leaks.\n    if (this.textFile !== null) {\n      window.URL.revokeObjectURL(this.textFile);\n    }\n\n    this.textFile = window.URL.createObjectURL(data);\n\n    // returns a URL you can use as a href\n    return this.textFile;\n  };\n\n  saveFile = () => {\n    // var create = document.getElementById(\"create\");\n    // create.addEventListener(\n    //   \"click\",\n    //   function() {\n    //     var link = document.createElement(\"a\");\n    //     link.setAttribute(\"download\", \"shapes.txt\");\n    //     link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n    //     document.body.appendChild(link);\n\n    //     // wait for the link to be added to the document\n    //     window.requestAnimationFrame(function() {\n    //       var event = new MouseEvent(\"click\");\n    //       link.dispatchEvent(event);\n    //       document.body.removeChild(link);\n    //     });\n    //   },\n    //   false\n    // );\n    this.downloadURI(\n      this.makeTextFile(JSON.stringify(this.savedRender)),\n      \"shapes.json\"\n    );\n  };\n  downloadURI = (uri, name) => {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  saveImage = () => {\n    const dataURL = this.stageRef.current\n      .getStage()\n      .toDataURL({ pixelRatio: 3 });\n    this.downloadURI(dataURL, \"stage.png\");\n  };\n\n  renderArrayOfShapes = shape => {\n    let array = [];\n    let loopShape = [];\n    for (let i = 0; i < shape.numToRender; i++) {\n      let x = placeInZone(window.innerWidth - this.state.sideBar);\n      let y = placeInZone(window.innerHeight);\n      array.push(\n        <SvgRender src={shape.image} x={x} y={x} scale={shape.minSize} />\n      );\n      loopShape.push({ ...shape, pos: { x, y } });\n    }\n    this.savedRender.push(loopShape);\n    return array;\n  };\n\n  shapeRender = () => {\n    const render = this.state.shapes.map(shape => {\n      return this.renderArrayOfShapes(shape);\n    });\n    // this.savedRender = render;\n    return render;\n  };\n\n  render() {\n    return (\n      <>\n        <Stage\n          ref={this.stageRef}\n          width={window.innerWidth - this.state.sideBar}\n          height={window.innerHeight}\n        >\n          <Layer>\n            <Rect\n              x={0}\n              y={0}\n              width={window.innerWidth - this.state.sideBar}\n              height={window.innerHeight}\n              fill=\"white\"\n            />\n          </Layer>\n          <Layer>\n            {this.shapeRender()}\n            {/* <SvgRender src={icon} x={300} y={800} scale={8} /> */}\n          </Layer>\n        </Stage>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <button onClick={this.posAllShapes}>mix</button>\n          <button onClick={this.saveImage}>Save Image</button>\n          <button onClick={this.saveFile}>Save set</button>\n        </div>\n\n        <div id=\"create\"></div>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}