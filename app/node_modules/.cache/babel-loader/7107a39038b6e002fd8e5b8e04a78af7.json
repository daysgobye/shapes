{"ast":null,"code":"import _objectSpread from \"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const placement = (shapes, width, height) => {\n  return shapes.map(shape => {\n    return _objectSpread({}, shape, {\n      pos: {\n        x: randomInRange(1, width),\n        y: randomInRange(1, height)\n      }\n    });\n  });\n};\nexport const placeInZone = cap => randomInRange(100, cap - 100);\nexport const randomInRange = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\nexport const placementInter = (cap, otherBodys) => {\n  let newPos = {\n    x: randomInRange(100, cap.innerWidth - 700),\n    y: randomInRange(100, cap.innerHeight - 100)\n  };\n\n  for (let i = 0; i < otherBodys.flat().length; i++) {\n    const pos = otherBodys[i];\n\n    if (newPos[1] > pos.pos[1] && newPos[1] < pos.pos[1] + 100 && newPos[0] > pos.pos[0] && newPos[0] < pos.pos[0] + 100) {\n      console.log(\"I got fucked\");\n      placementInter(cap, otherBodys);\n    }\n  }\n\n  return newPos;\n};","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/helpers.js/placement.js"],"names":["placement","shapes","width","height","map","shape","pos","x","randomInRange","y","placeInZone","cap","min","max","Math","floor","random","placementInter","otherBodys","newPos","innerWidth","innerHeight","i","flat","length","console","log"],"mappings":";AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,KAA2B;AAClD,SAAOF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACzB,6BACKA,KADL;AAEEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,CAAC,EAAEC,aAAa,CAAC,CAAD,EAAIN,KAAJ,CAAlB;AAA8BO,QAAAA,CAAC,EAAED,aAAa,CAAC,CAAD,EAAIL,MAAJ;AAA9C;AAFP;AAID,GALM,CAAP;AAMD,CAPM;AAQP,OAAO,MAAMO,WAAW,GAAGC,GAAG,IAAIH,aAAa,CAAC,GAAD,EAAMG,GAAG,GAAG,GAAZ,CAAxC;AAEP,OAAO,MAAMH,aAAa,GAAG,CAACI,GAAD,EAAMC,GAAN,KAC3BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CADK;AAGP,OAAO,MAAMK,cAAc,GAAG,CAACN,GAAD,EAAMO,UAAN,KAAqB;AACjD,MAAIC,MAAM,GAAG;AACXZ,IAAAA,CAAC,EAAEC,aAAa,CAAC,GAAD,EAAMG,GAAG,CAACS,UAAJ,GAAiB,GAAvB,CADL;AAEXX,IAAAA,CAAC,EAAED,aAAa,CAAC,GAAD,EAAMG,GAAG,CAACU,WAAJ,GAAkB,GAAxB;AAFL,GAAb;;AAKA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,IAAX,GAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AACjD,UAAMhB,GAAG,GAAGY,UAAU,CAACI,CAAD,CAAtB;;AACA,QACEH,MAAM,CAAC,CAAD,CAAN,GAAYb,GAAG,CAACA,GAAJ,CAAQ,CAAR,CAAZ,IACAa,MAAM,CAAC,CAAD,CAAN,GAAYb,GAAG,CAACA,GAAJ,CAAQ,CAAR,IAAa,GADzB,IAEAa,MAAM,CAAC,CAAD,CAAN,GAAYb,GAAG,CAACA,GAAJ,CAAQ,CAAR,CAFZ,IAGAa,MAAM,CAAC,CAAD,CAAN,GAAYb,GAAG,CAACA,GAAJ,CAAQ,CAAR,IAAa,GAJ3B,EAKE;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAT,MAAAA,cAAc,CAACN,GAAD,EAAMO,UAAN,CAAd;AACD;AACF;;AAED,SAAOC,MAAP;AACD,CArBM","sourcesContent":["export const placement = (shapes, width, height) => {\n  return shapes.map(shape => {\n    return {\n      ...shape,\n      pos: { x: randomInRange(1, width), y: randomInRange(1, height) }\n    };\n  });\n};\nexport const placeInZone = cap => randomInRange(100, cap - 100);\n\nexport const randomInRange = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const placementInter = (cap, otherBodys) => {\n  let newPos = {\n    x: randomInRange(100, cap.innerWidth - 700),\n    y: randomInRange(100, cap.innerHeight - 100)\n  };\n\n  for (let i = 0; i < otherBodys.flat().length; i++) {\n    const pos = otherBodys[i];\n    if (\n      newPos[1] > pos.pos[1] &&\n      newPos[1] < pos.pos[1] + 100 &&\n      newPos[0] > pos.pos[0] &&\n      newPos[0] < pos.pos[0] + 100\n    ) {\n      console.log(\"I got fucked\");\n\n      placementInter(cap, otherBodys);\n    }\n  }\n\n  return newPos;\n};\n"]},"metadata":{},"sourceType":"module"}