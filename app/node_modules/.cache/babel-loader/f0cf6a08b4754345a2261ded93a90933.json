{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement } from \"../helpers.js/placement\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.posAllShapes = () => {\n      this.setState({\n        shapes: placement(this.props.shapes, window.innerWidth, window.innerHeight)\n      });\n    };\n\n    this.state = {\n      shapes: []\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Stage, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.state.shapes.map(shape => {\n      return React.createElement(SvgRender, {\n        src: shape.image,\n        x: shape.pos.x,\n        y: shape.pos.y,\n        scale: shape.minSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }))), React.createElement(\"button\", {\n      onClick: this.posAllShapes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"mix\"));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","SvgRender","placement","Canvas","constructor","props","posAllShapes","setState","shapes","window","innerWidth","innerHeight","state","render","map","shape","image","pos","x","y","minSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,YAJmB,GAIJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEN,SAAS,CACf,KAAKG,KAAL,CAAWG,MADI,EAEfC,MAAM,CAACC,UAFQ,EAGfD,MAAM,CAACE,WAHQ;AADL,OAAd;AAOD,KAZkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AAUDK,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,MAAM,CAACC,UAArB;AAAiC,MAAA,MAAM,EAAED,MAAM,CAACE,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWJ,MAAX,CAAkBM,GAAlB,CAAsBC,KAAK,IAAI;AAC9B,aACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACC,KADb;AAEE,QAAA,CAAC,EAAED,KAAK,CAACE,GAAN,CAAUC,CAFf;AAGE,QAAA,CAAC,EAAEH,KAAK,CAACE,GAAN,CAAUE,CAHf;AAIE,QAAA,KAAK,EAAEJ,KAAK,CAACK,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,CADF,CADF,EAgBE;AAAQ,MAAA,OAAO,EAAE,KAAKd,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF,CADF;AAoBD;;AAnC4B;;AAsC/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\nimport logo from \"./logo.svg\";\nimport icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement } from \"../helpers.js/placement\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { shapes: [] };\n  }\n  posAllShapes = () => {\n    this.setState({\n      shapes: placement(\n        this.props.shapes,\n        window.innerWidth,\n        window.innerHeight\n      )\n    });\n  };\n  render() {\n    return (\n      <>\n        <Stage width={window.innerWidth} height={window.innerHeight}>\n          <Layer>\n            {this.state.shapes.map(shape => {\n              return (\n                <SvgRender\n                  src={shape.image}\n                  x={shape.pos.x}\n                  y={shape.pos.y}\n                  scale={shape.minSize}\n                />\n              );\n            })}\n            {/* <SvgRender src={icon} x={300} y={800} scale={8} /> */}\n          </Layer>\n        </Stage>\n        <button onClick={this.posAllShapes}>mix</button>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}