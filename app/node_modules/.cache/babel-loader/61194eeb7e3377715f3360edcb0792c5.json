{"ast":null,"code":"import _objectSpread from \"/Users/coles/Documents/brett/react/shapes/app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js\";\nimport React, { Component } from \"react\";\nimport Canvg from \"canvg\"; // import logo from \"./logo.svg\";\n// import icon from \"../ic.svg\";\n\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport { placement, placeInZone, placementInter } from \"../helpers.js/placement\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.posAllShapes = () => {\n      this.savedRender = [];\n      this.setState({\n        reRender: \"\"\n      }, () => {// this.saveFile();\n        // this.saveImage();\n      });\n    };\n\n    this.savedRender = [];\n    this.textFile = null;\n\n    this.makeTextFile = text => {\n      var data = new Blob([text], {\n        type: \"text/plain\"\n      }); // If we are replacing a previously generated file we need to\n      // manually revoke the object URL to avoid memory leaks.\n\n      if (this.textFile !== null) {\n        window.URL.revokeObjectURL(this.textFile);\n      }\n\n      this.textFile = window.URL.createObjectURL(data); // returns a URL you can use as a href\n\n      return this.textFile;\n    };\n\n    this.saveFile = () => {\n      // var create = document.getElementById(\"create\");\n      // create.addEventListener(\n      //   \"click\",\n      //   function() {\n      //     var link = document.createElement(\"a\");\n      //     link.setAttribute(\"download\", \"shapes.txt\");\n      //     link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n      //     document.body.appendChild(link);\n      //     // wait for the link to be added to the document\n      //     window.requestAnimationFrame(function() {\n      //       var event = new MouseEvent(\"click\");\n      //       link.dispatchEvent(event);\n      //       document.body.removeChild(link);\n      //     });\n      //   },\n      //   false\n      // );\n      this.downloadURI(this.makeTextFile(JSON.stringify(this.savedRender)), \"shapes.json\");\n    };\n\n    this.downloadURI = (uri, name) => {\n      var link = document.createElement(\"a\");\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n\n    this.saveImage = () => {\n      const dataURL = this.stageRef.current.getStage().toDataURL({\n        pixelRatio: 3\n      });\n      this.downloadURI(dataURL, \"stage.png\");\n    };\n\n    this.renderArrayOfShapes = shape => {\n      let array = [];\n      let loopShape = [];\n      let count = 0;\n\n      while (array.length < shape.numToRender || count < 1000) {\n        let x = placeInZone(window.innerWidth - this.state.sideBar);\n        let y = placeInZone(window.innerHeight);\n        let noIn = true; // let pos=placementInter( window,[...this.savedRender,...loopShape] )\n\n        let otherBodys = [...loopShape, ...this.savedRender];\n\n        for (let i = 0; i < otherBodys.flat().length; i++) {\n          const pos = otherBodys.flat()[i];\n\n          if (pos.pos && x > pos.pos.x - 100 && x < pos.pos.x + 100 && y > pos.pos.y - 100 && y < pos.pos.y + 100) {\n            console.log(\"overlap\");\n            noIn = false;\n            count++;\n          } // console.log(pos.pos, \"pos\");\n\n        }\n\n        if (noIn) {\n          array.push(React.createElement(SvgRender, {\n            key: y,\n            src: shape.image,\n            x: x,\n            y: y,\n            scale: shape.minSize,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }));\n          loopShape.push(_objectSpread({}, shape, {\n            pos: {\n              x,\n              y\n            }\n          }));\n        }\n      }\n\n      this.savedRender.push(loopShape);\n      return array;\n    };\n\n    this.shapeRender = () => {\n      const render = this.state.shapes.map(shape => {\n        return this.renderArrayOfShapes(shape);\n      }); // this.savedRender = render;\n\n      return render;\n    };\n\n    this.state = {\n      shapes: [],\n      sideBar: 600\n    };\n    this.stageRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Stage, {\n      ref: this.stageRef,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Rect, {\n      x: 0,\n      y: 0,\n      width: window.innerWidth - this.state.sideBar,\n      height: window.innerHeight,\n      fill: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.shapeRender())), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.posAllShapes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"mix\"), React.createElement(\"button\", {\n      onClick: this.saveImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Save Image\"), React.createElement(\"button\", {\n      onClick: this.saveFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Save set\")), React.createElement(\"div\", {\n      id: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/canvas.js"],"names":["React","Component","Canvg","Konva","Stage","Layer","Image","Rect","SvgRender","placement","placeInZone","placementInter","Canvas","constructor","props","posAllShapes","savedRender","setState","reRender","textFile","makeTextFile","text","data","Blob","type","window","URL","revokeObjectURL","createObjectURL","saveFile","downloadURI","JSON","stringify","uri","name","link","document","createElement","download","href","body","appendChild","click","removeChild","saveImage","dataURL","stageRef","current","getStage","toDataURL","pixelRatio","renderArrayOfShapes","shape","array","loopShape","count","length","numToRender","x","innerWidth","state","sideBar","y","innerHeight","noIn","otherBodys","i","flat","pos","console","log","push","image","minSize","shapeRender","render","shapes","map","createRef","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Canvg from \"canvg\";\n// import logo from \"./logo.svg\";\n// import icon from \"../ic.svg\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Image, Rect } from \"react-konva\";\nimport SvgRender from \"./svgRender\";\nimport {\n  placement,\n  placeInZone,\n  placementInter\n} from \"../helpers.js/placement\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { shapes: [], sideBar: 600 };\n    this.stageRef = React.createRef();\n  }\n  posAllShapes = () => {\n    this.savedRender = [];\n    this.setState(\n      {\n        reRender: \"\"\n      },\n      () => {\n        // this.saveFile();\n        // this.saveImage();\n      }\n    );\n  };\n  savedRender = [];\n  textFile = null;\n\n  makeTextFile = text => {\n    var data = new Blob([text], { type: \"text/plain\" });\n\n    // If we are replacing a previously generated file we need to\n    // manually revoke the object URL to avoid memory leaks.\n    if (this.textFile !== null) {\n      window.URL.revokeObjectURL(this.textFile);\n    }\n\n    this.textFile = window.URL.createObjectURL(data);\n\n    // returns a URL you can use as a href\n    return this.textFile;\n  };\n\n  saveFile = () => {\n    // var create = document.getElementById(\"create\");\n    // create.addEventListener(\n    //   \"click\",\n    //   function() {\n    //     var link = document.createElement(\"a\");\n    //     link.setAttribute(\"download\", \"shapes.txt\");\n    //     link.href = this.makeTextFile(JSON.stringify(this.state.shapes));\n    //     document.body.appendChild(link);\n\n    //     // wait for the link to be added to the document\n    //     window.requestAnimationFrame(function() {\n    //       var event = new MouseEvent(\"click\");\n    //       link.dispatchEvent(event);\n    //       document.body.removeChild(link);\n    //     });\n    //   },\n    //   false\n    // );\n    this.downloadURI(\n      this.makeTextFile(JSON.stringify(this.savedRender)),\n      \"shapes.json\"\n    );\n  };\n  downloadURI = (uri, name) => {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  saveImage = () => {\n    const dataURL = this.stageRef.current\n      .getStage()\n      .toDataURL({ pixelRatio: 3 });\n    this.downloadURI(dataURL, \"stage.png\");\n  };\n\n  renderArrayOfShapes = shape => {\n    let array = [];\n    let loopShape = [];\n    let count = 0;\n    while (array.length < shape.numToRender || count < 1000) {\n      let x = placeInZone(window.innerWidth - this.state.sideBar);\n      let y = placeInZone(window.innerHeight);\n      let noIn = true;\n      // let pos=placementInter( window,[...this.savedRender,...loopShape] )\n      let otherBodys = [...loopShape, ...this.savedRender];\n      for (let i = 0; i < otherBodys.flat().length; i++) {\n        const pos = otherBodys.flat()[i];\n        if (\n          pos.pos &&\n          x > pos.pos.x - 100 &&\n          x < pos.pos.x + 100 &&\n          y > pos.pos.y - 100 &&\n          y < pos.pos.y + 100\n        ) {\n          console.log(\"overlap\");\n          noIn = false;\n          count++;\n        }\n        // console.log(pos.pos, \"pos\");\n      }\n      if (noIn) {\n        array.push(\n          <SvgRender\n            key={y}\n            src={shape.image}\n            x={x}\n            y={y}\n            scale={shape.minSize}\n          />\n        );\n        loopShape.push({ ...shape, pos: { x, y } });\n      }\n    }\n    this.savedRender.push(loopShape);\n    return array;\n  };\n\n  shapeRender = () => {\n    const render = this.state.shapes.map(shape => {\n      return this.renderArrayOfShapes(shape);\n    });\n    // this.savedRender = render;\n    return render;\n  };\n\n  render() {\n    return (\n      <>\n        <Stage\n          ref={this.stageRef}\n          width={window.innerWidth - this.state.sideBar}\n          height={window.innerHeight}\n        >\n          <Layer>\n            <Rect\n              x={0}\n              y={0}\n              width={window.innerWidth - this.state.sideBar}\n              height={window.innerHeight}\n              fill=\"white\"\n            />\n          </Layer>\n          <Layer>\n            {this.shapeRender()}\n            {/* <SvgRender src={icon} x={300} y={800} scale={8} /> */}\n          </Layer>\n        </Stage>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <button onClick={this.posAllShapes}>mix</button>\n          <button onClick={this.saveImage}>Save Image</button>\n          <button onClick={this.saveFile}>Save set</button>\n        </div>\n\n        <div id=\"create\"></div>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}