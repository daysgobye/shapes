{"ast":null,"code":"var _jsxFileName = \"/Users/coles/Documents/brett/react/shapes/app/src/componets/editShape.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Input } from \"reactstrap\";\nimport shape from \"../classes/shape\";\n\nclass EditShape extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateScale = () => {\n      this.props.updateShape(this.props.shape.upDateMinSize(this.scaleRef.current.value));\n    };\n\n    this.onUpdateAmount = () => {\n      this.props.updateShape(this.props.shape.upDateNum(this.amountToSpawnRef.current.value));\n    };\n\n    this.state = {};\n    this.amountToSpawnRef = React.createRef();\n    this.scaleRef = React.createRef();\n  }\n\n  render() {\n    const shape = this.props.shape;\n    return React.createElement(Container, {\n      key: this.props.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: shape.image,\n      width: 50,\n      height: 50,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"number to spawn:\", React.createElement(Input, {\n      type: \"number\",\n      name: \"number\",\n      onChange: this.onUpdateAmount,\n      ref: this.amountToSpawnRef,\n      value: shape.numToRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      xs: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"scale:\", React.createElement(Input, {\n      type: \"number\",\n      name: \"number\",\n      ref: this.scaleRef,\n      onChange: this.onUpdateScale,\n      value: shape.minSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default EditShape;","map":{"version":3,"sources":["/Users/coles/Documents/brett/react/shapes/app/src/componets/editShape.js"],"names":["React","Component","Container","Row","Col","Input","shape","EditShape","constructor","props","onUpdateScale","updateShape","upDateMinSize","scaleRef","current","value","onUpdateAmount","upDateNum","amountToSpawnRef","state","createRef","render","key","image","numToRender","minSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,YAA3C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AACA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,aANmB,GAMH,MAAM;AACpB,WAAKD,KAAL,CAAWE,WAAX,CACE,KAAKF,KAAL,CAAWH,KAAX,CAAiBM,aAAjB,CAA+B,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAArD,CADF;AAGD,KAVkB;;AAAA,SAWnBC,cAXmB,GAWF,MAAM;AACrB,WAAKP,KAAL,CAAWE,WAAX,CACE,KAAKF,KAAL,CAAWH,KAAX,CAAiBW,SAAjB,CAA2B,KAAKC,gBAAL,CAAsBJ,OAAtB,CAA8BC,KAAzD,CADF;AAGD,KAfkB;;AAEjB,SAAKI,KAAL,GAAa,EAAb;AACA,SAAKD,gBAAL,GAAwBlB,KAAK,CAACoB,SAAN,EAAxB;AACA,SAAKP,QAAL,GAAgBb,KAAK,CAACoB,SAAN,EAAhB;AACD;;AAWDC,EAAAA,MAAM,GAAG;AAAA,UACCf,KADD,GACW,KAAKG,KADhB,CACCH,KADD;AAEP,WACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWa,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEhB,KAAK,CAACiB,KAAhB;AAAuB,MAAA,KAAK,EAAE,EAA9B;AAAkC,MAAA,MAAM,EAAE,EAA1C;AAA8C,MAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKP,cAHjB;AAIE,MAAA,GAAG,EAAE,KAAKE,gBAJZ;AAKE,MAAA,KAAK,EAAEZ,KAAK,CAACkB,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAJF,EAgBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAE,KAAKX,QAHZ;AAIE,MAAA,QAAQ,EAAE,KAAKH,aAJjB;AAKE,MAAA,KAAK,EAAEJ,KAAK,CAACmB,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAhBF,CAHF,CADF;AAmCD;;AAtD+B;;AAyDlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col, Input } from \"reactstrap\";\nimport shape from \"../classes/shape\";\nclass EditShape extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.amountToSpawnRef = React.createRef();\n    this.scaleRef = React.createRef();\n  }\n  onUpdateScale = () => {\n    this.props.updateShape(\n      this.props.shape.upDateMinSize(this.scaleRef.current.value)\n    );\n  };\n  onUpdateAmount = () => {\n    this.props.updateShape(\n      this.props.shape.upDateNum(this.amountToSpawnRef.current.value)\n    );\n  };\n  render() {\n    const { shape } = this.props;\n    return (\n      <Container key={this.props.key}>\n        {/* {shape.color} */}\n        {/* {shape.image} */}\n        <Row>\n          <Col xs=\"2\">\n            <img src={shape.image} width={50} height={50} alt=\"\" />\n          </Col>\n          <Col xs=\"5\">\n            <label>\n              number to spawn:\n              <Input\n                type=\"number\"\n                name=\"number\"\n                onChange={this.onUpdateAmount}\n                ref={this.amountToSpawnRef}\n                value={shape.numToRender}\n              />\n            </label>\n          </Col>\n          <Col xs=\"5\">\n            <label>\n              scale:\n              <Input\n                type=\"number\"\n                name=\"number\"\n                ref={this.scaleRef}\n                onChange={this.onUpdateScale}\n                value={shape.minSize}\n              />\n            </label>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default EditShape;\n"]},"metadata":{},"sourceType":"module"}